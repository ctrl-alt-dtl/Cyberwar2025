/*******************************************************************************
 * The main game logic controller that manages the current game state
 ******************************************************************************/
var _ = require("underscore");
var Util = require("./util.js");
var ActionType = require("../../shared/actionType.js").ActionType;
var AdjudicationMath = require("../../shared/adjudicationMath.js").AdjudicationMath;

//------------------------------------------------------------------------------
this.performOrders = function(prevTurn, newTurn) {
  _.each(prevTurn.players, function(player) {
    _.each(player.orders, function(order) {
      if (order.action == ActionType.EXPLOIT) {
        var newTurnPlayer = Util.Shared.findPlayerByColor(newTurn.players, player.color);
        var attackerNode = Util.Shared.getServerNode(newTurn.serverNodes, order.params.source.color, order.params.source.index);
        var defenderNode = Util.Shared.getServerNode(newTurn.serverNodes, order.node.color, order.node.index);
        performExploit(newTurnPlayer, attackerNode, defenderNode);
      }
    });
  });
}

//------------------------------------------------------------------------------
var performExploit = function(player, attackerNode, defenderNode) {
  console.log('Exploit attack: Defender = ' + defenderNode.strength + ' Attacker = ' + attackerNode.strength);
  if (AdjudicationMath.captureOddsOneVsOne(defenderNode.strength, attackerNode.strength)) {
    player.exploitLinks.push({ nodeA: attackerNode.location, nodeB: defenderNode.location });
  }
}
