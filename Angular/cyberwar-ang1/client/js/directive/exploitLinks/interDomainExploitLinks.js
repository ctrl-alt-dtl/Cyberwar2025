// Inter Domain Links
app.directive('gameBoardR1P2ExploitLink', function ($rootScope) {
  return {
    restrict: 'A',
    link: function (scope) {
      console.log("gameBoardR1P2ExploitLinkLoading");
      // linksGroup.add(r1p2Exploit);

      var options = {
        points: [
          BASE_BOARD_WIDTH / 2.83,
          BASE_BOARD_HEIGHT / 1.155,
          BASE_BOARD_WIDTH / 3,
          BASE_BOARD_HEIGHT / 1.175
        ],
        stroke: 'black',
        strokeWidth: exploitLinksStroke,
        lineCap: 'square',
        lineJoin: 'square',
        dash: [
          exploitLineDashWidth,
          exploitLineDashGap
        ],
        visible: lineVisible,
        id: 'r1p2HexExploitLink'
      }

      scope.konvaobj = new Konva.Line(options);
      // add cursor styling
      scope.konvaobj.on('mouseover', function () {
        document.body.style.cursor = 'pointer';

        var mousePos = stage.getPointerPosition();

        toolTipText.position({
          x: mousePos.x + 5,
          y: mousePos.y + 5,
        });
        toolTipRect.position({
          x: mousePos.x + 5,
          y: mousePos.y + 5,
        });

        toolTipRect.show();
        toolTipText.text("WMDeez");
        toolTipText.show();
        toolTipLayer.batchDraw();
      });
      scope.konvaobj.on('mouseout', function () {
        document.body.style.cursor = 'default';
        $rootScope.$emit("CANVAS-MOUSEOUT");

        toolTipRect.hide();
        toolTipText.hide();
        toolTipLayer.draw();
      });

      scope.konvaobj.on ('click', function () {
        console.log("R1P2 Exploit");
      });
      // This needs to be on the domainsGroup for some reason and not the linksGroup
      domainsGroup.add(scope.konvaobj);

      console.log("gameBoardR1P2ExploitLinkLoaded");
    }
  }
});