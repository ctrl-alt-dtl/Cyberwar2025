// Red Domain Links
app.directive('gameBoardR1R3ExploitLink', function ($rootScope, $timeout) {
  return {
    restrict: 'A',
    link: function (scope) {
      console.log("gameBoardRedR1R3ExploitLinkLoading");
      // linksGroup.add(r1r3Exploit);

      var options = {
        points: [
          BASE_BOARD_WIDTH / 2.8,
          BASE_BOARD_HEIGHT / 1.133,
          BASE_BOARD_WIDTH / 2.5,
          pt_r3Hex_Y
        ],
        stroke: 'black',
        strokeWidth: exploitLinksStroke,
        lineCap: 'square',
        lineJoin: 'square',
        dash: [
          exploitLineDashWidth,
          exploitLineDashGap
        ],
        visible: lineVisible,
        id: 'r1r3HexExploitLink'
      }

      scope.konvaobj = new Konva.Line(options);
      // add cursor styling
      scope.konvaobj.on('mouseover', function () {
        document.body.style.cursor = 'pointer';

        var mousePos = stage.getPointerPosition();

        toolTipText.position({
          x: mousePos.x + 5,
          y: mousePos.y + 5,
        });
        toolTipRect.position({
          x: mousePos.x + 5,
          y: mousePos.y + 5,
        });

        toolTipRect.show();
        // toolTipText.text("BuzzKill\nCuttlePhish");
        toolTipText.show();
        toolTipLayer.batchDraw();
      });
      scope.konvaobj.on('mouseout', function () {
        document.body.style.cursor = 'default';
        $rootScope.$emit("CANVAS-MOUSEOUT");

        toolTipRect.hide();
        toolTipText.hide();
        toolTipLayer.draw();
      });

      scope.konvaobj.on ('click', function () {
        console.log("R1R3 Exploit");
        $timeout(function() {
          $rootScope.clickCountRed++;
        });

      });
      linksGroup.add(scope.konvaobj);

      console.log("gameBoardRedR1R3ExploitLinkLoaded");
    }
  }
});

app.directive('gameBoardR3R6ExploitLink', function ($rootScope, $timeout) {
  return {
    restrict: 'A',
    link: function (scope) {
      console.log("gameBoardRedR3R6ExploitLinkLoading");

      // add cursor styling
      r3r6Exploit.on('mouseover', function () {
        document.body.style.cursor = 'pointer';

        var mousePos = stage.getPointerPosition();

        r3r6ToolTipText.position({
          x: mousePos.x + 5,
          y: mousePos.y + 5,
        });
        toolTipRect.position({
          x: mousePos.x + 5,
          y: mousePos.y + 5,
        });

        if(r3r6ToolTipText.text() !== ""){
          toolTipRect.show();
          // r3r6ToolTipText.text("Test\nTest2");
          r3r6ToolTipText.show();
          toolTipLayer.batchDraw();
        }

      });
      r3r6Exploit.on('mouseout', function () {
        document.body.style.cursor = 'default';
        $rootScope.$emit("CANVAS-MOUSEOUT");

        toolTipRect.hide();
        r3r6ToolTipText.hide();
        toolTipLayer.draw();
      });

      r3r6Exploit.on ('click', function () {
        console.log("R3R6 Exploit");
        $timeout(function() {
          $rootScope.clickCountRed++;
        });

      });
      linksGroup.add(r3r6Exploit);

      console.log("gameBoardRedR3R6ExploitLinkLoaded");
    }
  }
});